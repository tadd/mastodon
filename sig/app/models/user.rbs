class User < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[User, User::ActiveRecord_Relation]

  include Settings::Extend

  include UserRoles

  include Omniauthable

  include PamAuthenticable

  include LdapAuthenticable

  include Devise::Models::Authenticatable

  include Devise::Models::Trackable

  include Devise::Models::Validatable

  include Devise::Models::Recoverable

  attr_accessor id (): Integer
  def id_changed?: () -> bool
  def id_change: () -> [Integer?, Integer?]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor email (): String
  def email_changed?: () -> bool
  def email_change: () -> [String?, String?]
  def email_will_change!: () -> void
  def email_was: () -> String?
  def email_previously_changed?: () -> bool
  def email_previous_change: () -> Array[String?]?
  def email_previously_was: () -> String?
  def restore_email!: () -> void
  def clear_email_change: () -> void

  attr_accessor created_at (): Time
  def created_at_changed?: () -> bool
  def created_at_change: () -> [Time?, Time?]
  def created_at_will_change!: () -> void
  def created_at_was: () -> Time?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[Time?]?
  def created_at_previously_was: () -> Time?
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at (): Time
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [Time?, Time?]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> Time?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[Time?]?
  def updated_at_previously_was: () -> Time?
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  attr_accessor encrypted_password (): String
  def encrypted_password_changed?: () -> bool
  def encrypted_password_change: () -> [String?, String?]
  def encrypted_password_will_change!: () -> void
  def encrypted_password_was: () -> String?
  def encrypted_password_previously_changed?: () -> bool
  def encrypted_password_previous_change: () -> Array[String?]?
  def encrypted_password_previously_was: () -> String?
  def restore_encrypted_password!: () -> void
  def clear_encrypted_password_change: () -> void

  attr_accessor reset_password_token (): String
  def reset_password_token_changed?: () -> bool
  def reset_password_token_change: () -> [String?, String?]
  def reset_password_token_will_change!: () -> void
  def reset_password_token_was: () -> String?
  def reset_password_token_previously_changed?: () -> bool
  def reset_password_token_previous_change: () -> Array[String?]?
  def reset_password_token_previously_was: () -> String?
  def restore_reset_password_token!: () -> void
  def clear_reset_password_token_change: () -> void

  attr_accessor reset_password_sent_at (): Time
  def reset_password_sent_at_changed?: () -> bool
  def reset_password_sent_at_change: () -> [Time?, Time?]
  def reset_password_sent_at_will_change!: () -> void
  def reset_password_sent_at_was: () -> Time?
  def reset_password_sent_at_previously_changed?: () -> bool
  def reset_password_sent_at_previous_change: () -> Array[Time?]?
  def reset_password_sent_at_previously_was: () -> Time?
  def restore_reset_password_sent_at!: () -> void
  def clear_reset_password_sent_at_change: () -> void

  attr_accessor remember_created_at (): Time
  def remember_created_at_changed?: () -> bool
  def remember_created_at_change: () -> [Time?, Time?]
  def remember_created_at_will_change!: () -> void
  def remember_created_at_was: () -> Time?
  def remember_created_at_previously_changed?: () -> bool
  def remember_created_at_previous_change: () -> Array[Time?]?
  def remember_created_at_previously_was: () -> Time?
  def restore_remember_created_at!: () -> void
  def clear_remember_created_at_change: () -> void

  attr_accessor sign_in_count (): Integer
  def sign_in_count_changed?: () -> bool
  def sign_in_count_change: () -> [Integer?, Integer?]
  def sign_in_count_will_change!: () -> void
  def sign_in_count_was: () -> Integer?
  def sign_in_count_previously_changed?: () -> bool
  def sign_in_count_previous_change: () -> Array[Integer?]?
  def sign_in_count_previously_was: () -> Integer?
  def restore_sign_in_count!: () -> void
  def clear_sign_in_count_change: () -> void

  attr_accessor current_sign_in_at (): Time
  def current_sign_in_at_changed?: () -> bool
  def current_sign_in_at_change: () -> [Time?, Time?]
  def current_sign_in_at_will_change!: () -> void
  def current_sign_in_at_was: () -> Time?
  def current_sign_in_at_previously_changed?: () -> bool
  def current_sign_in_at_previous_change: () -> Array[Time?]?
  def current_sign_in_at_previously_was: () -> Time?
  def restore_current_sign_in_at!: () -> void
  def clear_current_sign_in_at_change: () -> void

  attr_accessor last_sign_in_at (): Time
  def last_sign_in_at_changed?: () -> bool
  def last_sign_in_at_change: () -> [Time?, Time?]
  def last_sign_in_at_will_change!: () -> void
  def last_sign_in_at_was: () -> Time?
  def last_sign_in_at_previously_changed?: () -> bool
  def last_sign_in_at_previous_change: () -> Array[Time?]?
  def last_sign_in_at_previously_was: () -> Time?
  def restore_last_sign_in_at!: () -> void
  def clear_last_sign_in_at_change: () -> void

  attr_accessor current_sign_in_ip (): IPAddr
  def current_sign_in_ip_changed?: () -> bool
  def current_sign_in_ip_change: () -> [IPAddr?, IPAddr?]
  def current_sign_in_ip_will_change!: () -> void
  def current_sign_in_ip_was: () -> IPAddr?
  def current_sign_in_ip_previously_changed?: () -> bool
  def current_sign_in_ip_previous_change: () -> Array[IPAddr?]?
  def current_sign_in_ip_previously_was: () -> IPAddr?
  def restore_current_sign_in_ip!: () -> void
  def clear_current_sign_in_ip_change: () -> void

  attr_accessor last_sign_in_ip (): IPAddr
  def last_sign_in_ip_changed?: () -> bool
  def last_sign_in_ip_change: () -> [IPAddr?, IPAddr?]
  def last_sign_in_ip_will_change!: () -> void
  def last_sign_in_ip_was: () -> IPAddr?
  def last_sign_in_ip_previously_changed?: () -> bool
  def last_sign_in_ip_previous_change: () -> Array[IPAddr?]?
  def last_sign_in_ip_previously_was: () -> IPAddr?
  def restore_last_sign_in_ip!: () -> void
  def clear_last_sign_in_ip_change: () -> void

  attr_accessor admin (): bool
  def admin_changed?: () -> bool
  def admin_change: () -> [(TrueClass | FalseClass)?, (TrueClass | FalseClass)?]
  def admin_will_change!: () -> void
  def admin_was: () -> (TrueClass | FalseClass)?
  def admin_previously_changed?: () -> bool
  def admin_previous_change: () -> Array[(TrueClass | FalseClass)?]?
  def admin_previously_was: () -> (TrueClass | FalseClass)?
  def restore_admin!: () -> void
  def clear_admin_change: () -> void
  attr_accessor admin? (): TrueClass | FalseClass

  attr_accessor confirmation_token (): String
  def confirmation_token_changed?: () -> bool
  def confirmation_token_change: () -> [String?, String?]
  def confirmation_token_will_change!: () -> void
  def confirmation_token_was: () -> String?
  def confirmation_token_previously_changed?: () -> bool
  def confirmation_token_previous_change: () -> Array[String?]?
  def confirmation_token_previously_was: () -> String?
  def restore_confirmation_token!: () -> void
  def clear_confirmation_token_change: () -> void

  attr_accessor confirmed_at (): Time
  def confirmed_at_changed?: () -> bool
  def confirmed_at_change: () -> [Time?, Time?]
  def confirmed_at_will_change!: () -> void
  def confirmed_at_was: () -> Time?
  def confirmed_at_previously_changed?: () -> bool
  def confirmed_at_previous_change: () -> Array[Time?]?
  def confirmed_at_previously_was: () -> Time?
  def restore_confirmed_at!: () -> void
  def clear_confirmed_at_change: () -> void

  attr_accessor confirmation_sent_at (): Time
  def confirmation_sent_at_changed?: () -> bool
  def confirmation_sent_at_change: () -> [Time?, Time?]
  def confirmation_sent_at_will_change!: () -> void
  def confirmation_sent_at_was: () -> Time?
  def confirmation_sent_at_previously_changed?: () -> bool
  def confirmation_sent_at_previous_change: () -> Array[Time?]?
  def confirmation_sent_at_previously_was: () -> Time?
  def restore_confirmation_sent_at!: () -> void
  def clear_confirmation_sent_at_change: () -> void

  attr_accessor unconfirmed_email (): String
  def unconfirmed_email_changed?: () -> bool
  def unconfirmed_email_change: () -> [String?, String?]
  def unconfirmed_email_will_change!: () -> void
  def unconfirmed_email_was: () -> String?
  def unconfirmed_email_previously_changed?: () -> bool
  def unconfirmed_email_previous_change: () -> Array[String?]?
  def unconfirmed_email_previously_was: () -> String?
  def restore_unconfirmed_email!: () -> void
  def clear_unconfirmed_email_change: () -> void

  attr_accessor locale (): String
  def locale_changed?: () -> bool
  def locale_change: () -> [String?, String?]
  def locale_will_change!: () -> void
  def locale_was: () -> String?
  def locale_previously_changed?: () -> bool
  def locale_previous_change: () -> Array[String?]?
  def locale_previously_was: () -> String?
  def restore_locale!: () -> void
  def clear_locale_change: () -> void

  attr_accessor encrypted_otp_secret (): String
  def encrypted_otp_secret_changed?: () -> bool
  def encrypted_otp_secret_change: () -> [String?, String?]
  def encrypted_otp_secret_will_change!: () -> void
  def encrypted_otp_secret_was: () -> String?
  def encrypted_otp_secret_previously_changed?: () -> bool
  def encrypted_otp_secret_previous_change: () -> Array[String?]?
  def encrypted_otp_secret_previously_was: () -> String?
  def restore_encrypted_otp_secret!: () -> void
  def clear_encrypted_otp_secret_change: () -> void

  attr_accessor encrypted_otp_secret_iv (): String
  def encrypted_otp_secret_iv_changed?: () -> bool
  def encrypted_otp_secret_iv_change: () -> [String?, String?]
  def encrypted_otp_secret_iv_will_change!: () -> void
  def encrypted_otp_secret_iv_was: () -> String?
  def encrypted_otp_secret_iv_previously_changed?: () -> bool
  def encrypted_otp_secret_iv_previous_change: () -> Array[String?]?
  def encrypted_otp_secret_iv_previously_was: () -> String?
  def restore_encrypted_otp_secret_iv!: () -> void
  def clear_encrypted_otp_secret_iv_change: () -> void

  attr_accessor encrypted_otp_secret_salt (): String
  def encrypted_otp_secret_salt_changed?: () -> bool
  def encrypted_otp_secret_salt_change: () -> [String?, String?]
  def encrypted_otp_secret_salt_will_change!: () -> void
  def encrypted_otp_secret_salt_was: () -> String?
  def encrypted_otp_secret_salt_previously_changed?: () -> bool
  def encrypted_otp_secret_salt_previous_change: () -> Array[String?]?
  def encrypted_otp_secret_salt_previously_was: () -> String?
  def restore_encrypted_otp_secret_salt!: () -> void
  def clear_encrypted_otp_secret_salt_change: () -> void

  attr_accessor consumed_timestep (): Integer
  def consumed_timestep_changed?: () -> bool
  def consumed_timestep_change: () -> [Integer?, Integer?]
  def consumed_timestep_will_change!: () -> void
  def consumed_timestep_was: () -> Integer?
  def consumed_timestep_previously_changed?: () -> bool
  def consumed_timestep_previous_change: () -> Array[Integer?]?
  def consumed_timestep_previously_was: () -> Integer?
  def restore_consumed_timestep!: () -> void
  def clear_consumed_timestep_change: () -> void

  attr_accessor otp_required_for_login (): bool
  def otp_required_for_login_changed?: () -> bool
  def otp_required_for_login_change: () -> [(TrueClass | FalseClass)?, (TrueClass | FalseClass)?]
  def otp_required_for_login_will_change!: () -> void
  def otp_required_for_login_was: () -> (TrueClass | FalseClass)?
  def otp_required_for_login_previously_changed?: () -> bool
  def otp_required_for_login_previous_change: () -> Array[(TrueClass | FalseClass)?]?
  def otp_required_for_login_previously_was: () -> (TrueClass | FalseClass)?
  def restore_otp_required_for_login!: () -> void
  def clear_otp_required_for_login_change: () -> void
  attr_accessor otp_required_for_login? (): bool

  attr_accessor last_emailed_at (): Time
  def last_emailed_at_changed?: () -> bool
  def last_emailed_at_change: () -> [Time?, Time?]
  def last_emailed_at_will_change!: () -> void
  def last_emailed_at_was: () -> Time?
  def last_emailed_at_previously_changed?: () -> bool
  def last_emailed_at_previous_change: () -> Array[Time?]?
  def last_emailed_at_previously_was: () -> Time?
  def restore_last_emailed_at!: () -> void
  def clear_last_emailed_at_change: () -> void

  attr_accessor otp_backup_codes (): String
  def otp_backup_codes_changed?: () -> bool
  def otp_backup_codes_change: () -> [String?, String?]
  def otp_backup_codes_will_change!: () -> void
  def otp_backup_codes_was: () -> String?
  def otp_backup_codes_previously_changed?: () -> bool
  def otp_backup_codes_previous_change: () -> Array[String?]?
  def otp_backup_codes_previously_was: () -> String?
  def restore_otp_backup_codes!: () -> void
  def clear_otp_backup_codes_change: () -> void

  attr_accessor filtered_languages (): String
  def filtered_languages_changed?: () -> bool
  def filtered_languages_change: () -> [String?, String?]
  def filtered_languages_will_change!: () -> void
  def filtered_languages_was: () -> String?
  def filtered_languages_previously_changed?: () -> bool
  def filtered_languages_previous_change: () -> Array[String?]?
  def filtered_languages_previously_was: () -> String?
  def restore_filtered_languages!: () -> void
  def clear_filtered_languages_change: () -> void

  attr_accessor account_id (): Integer
  def account_id_changed?: () -> bool
  def account_id_change: () -> [Integer?, Integer?]
  def account_id_will_change!: () -> void
  def account_id_was: () -> Integer?
  def account_id_previously_changed?: () -> bool
  def account_id_previous_change: () -> Array[Integer?]?
  def account_id_previously_was: () -> Integer?
  def restore_account_id!: () -> void
  def clear_account_id_change: () -> void

  attr_accessor disabled (): bool
  def disabled_changed?: () -> bool
  def disabled_change: () -> [(TrueClass | FalseClass)?, (TrueClass | FalseClass)?]
  def disabled_will_change!: () -> void
  def disabled_was: () -> (TrueClass | FalseClass)?
  def disabled_previously_changed?: () -> bool
  def disabled_previous_change: () -> Array[(TrueClass | FalseClass)?]?
  def disabled_previously_was: () -> (TrueClass | FalseClass)?
  def restore_disabled!: () -> void
  def clear_disabled_change: () -> void
  attr_accessor disabled? (): bool

  attr_accessor moderator (): bool
  def moderator_changed?: () -> bool
  def moderator_change: () -> [(TrueClass | FalseClass)?, (TrueClass | FalseClass)?]
  def moderator_will_change!: () -> void
  def moderator_was: () -> (TrueClass | FalseClass)?
  def moderator_previously_changed?: () -> bool
  def moderator_previous_change: () -> Array[(TrueClass | FalseClass)?]?
  def moderator_previously_was: () -> (TrueClass | FalseClass)?
  def restore_moderator!: () -> void
  def clear_moderator_change: () -> void
  attr_accessor moderator? (): TrueClass | FalseClass

  attr_accessor invite_id (): Integer
  def invite_id_changed?: () -> bool
  def invite_id_change: () -> [Integer?, Integer?]
  def invite_id_will_change!: () -> void
  def invite_id_was: () -> Integer?
  def invite_id_previously_changed?: () -> bool
  def invite_id_previous_change: () -> Array[Integer?]?
  def invite_id_previously_was: () -> Integer?
  def restore_invite_id!: () -> void
  def clear_invite_id_change: () -> void

  attr_accessor remember_token (): String
  def remember_token_changed?: () -> bool
  def remember_token_change: () -> [String?, String?]
  def remember_token_will_change!: () -> void
  def remember_token_was: () -> String?
  def remember_token_previously_changed?: () -> bool
  def remember_token_previous_change: () -> Array[String?]?
  def remember_token_previously_was: () -> String?
  def restore_remember_token!: () -> void
  def clear_remember_token_change: () -> void

  attr_accessor chosen_languages (): Array[String]?
  def chosen_languages_changed?: () -> bool
  def chosen_languages_change: () -> [Array[String]?, Array[String]?]
  def chosen_languages_will_change!: () -> void
  def chosen_languages_was: () -> String?
  def chosen_languages_previously_changed?: () -> bool
  def chosen_languages_previous_change: () -> Array[Array[String]?]?
  def chosen_languages_previously_was: () -> Array[String]?
  def restore_chosen_languages!: () -> void
  def clear_chosen_languages_change: () -> void

  attr_accessor created_by_application_id (): Integer
  def created_by_application_id_changed?: () -> bool
  def created_by_application_id_change: () -> [Integer?, Integer?]
  def created_by_application_id_will_change!: () -> void
  def created_by_application_id_was: () -> Integer?
  def created_by_application_id_previously_changed?: () -> bool
  def created_by_application_id_previous_change: () -> Array[Integer?]?
  def created_by_application_id_previously_was: () -> Integer?
  def restore_created_by_application_id!: () -> void
  def clear_created_by_application_id_change: () -> void

  attr_accessor approved (): bool
  def approved_changed?: () -> bool
  def approved_change: () -> [(TrueClass | FalseClass)?, (TrueClass | FalseClass)?]
  def approved_will_change!: () -> void
  def approved_was: () -> (TrueClass | FalseClass)?
  def approved_previously_changed?: () -> bool
  def approved_previous_change: () -> Array[(TrueClass | FalseClass)?]?
  def approved_previously_was: () -> (TrueClass | FalseClass)?
  def restore_approved!: () -> void
  def clear_approved_change: () -> void
  attr_accessor approved? (): TrueClass | FalseClass

  attr_accessor sign_in_token (): String
  def sign_in_token_changed?: () -> bool
  def sign_in_token_change: () -> [String?, String?]
  def sign_in_token_will_change!: () -> void
  def sign_in_token_was: () -> String?
  def sign_in_token_previously_changed?: () -> bool
  def sign_in_token_previous_change: () -> Array[String?]?
  def sign_in_token_previously_was: () -> String?
  def restore_sign_in_token!: () -> void
  def clear_sign_in_token_change: () -> void

  attr_accessor sign_in_token_sent_at (): Time
  def sign_in_token_sent_at_changed?: () -> bool
  def sign_in_token_sent_at_change: () -> [Time?, Time?]
  def sign_in_token_sent_at_will_change!: () -> void
  def sign_in_token_sent_at_was: () -> Time?
  def sign_in_token_sent_at_previously_changed?: () -> bool
  def sign_in_token_sent_at_previous_change: () -> Array[Time?]?
  def sign_in_token_sent_at_previously_was: () -> Time?
  def restore_sign_in_token_sent_at!: () -> void
  def clear_sign_in_token_sent_at_change: () -> void

  attr_accessor invite (): Invite?

  attr_reader invite_code: String
  attr_reader sign_in_token_attempt: String
  attr_reader devise_mailer: UserMailer

  attr_writer external: bool

  def applications: () -> Doorkeeper::Application::ActiveRecord_Associations_CollectionProxy
  def backups: () -> Backup::ActiveRecord_Associations_CollectionProxy
  def invites: () -> Invite::ActiveRecord_Associations_CollectionProxy
  def markers: () -> Marker::ActiveRecord_Associations_CollectionProxy
  def session_activations: () -> SessionActivation::ActiveRecord_Associations_CollectionProxy
  def invite_request: () -> UserInviteRequest
  def account: () -> Account
  def created_by_application: () -> Doorkeeper::Application

  def active_for_authentication?: () -> bool
  def suspicious_sign_in?: (IPAddr) -> bool
  def functional?: () -> bool
  def unconfirmed_or_pending?: () -> bool
  def inactive_message: () -> Symbol
  def approve!: () -> void
  def update_tracked_fields!: (Rack::Request) -> void
  def disable_two_factor!: () -> void
  def setting_default_privacy: () -> String
  def allows_digest_emails?: () -> bool
  def allows_report_emails?: () -> bool
  def allows_pending_account_emails?: () -> bool
  def allows_trending_tag_emails?: () -> bool
  def hides_network?: () -> bool
  def aggregates_reblogs?: () -> bool
  def shows_application?: () -> bool
  def token_for_app: (Doorkeeper::Application) -> void
  def activate_session: (Rack::Request) -> bool
  def clear_other_sessions: (String id) -> void
  def session_active?: (String id) -> bool
  def web_push_subscription: (SessionActivation session) -> Web::PushSubscription?
  def invite_code=: (String) -> String
  def password_required?: () -> bool
  def external_or_valid_password?: (String compare_password) -> bool
  def send_reset_password_instructions: () -> (String | false)
  def reset_password!: (String, String) -> void
  def show_all_media?: () -> bool
  def hide_all_media?: () -> bool
  def recent_ips: () -> Array[[Time, IPAddr]]
  def sign_in_token_expired?: () -> bool
  def generate_sign_in_token: () -> void
  def send_devise_notification: (Symbol, *untyped args) -> void
  def recent_ip?: (IPAddr ip) -> bool
  def send_pending_devise_notifications: () -> void
  def pending_devise_notifications: () -> Array[[Symbol, Array[untyped]]]
  def render_and_send_devise_message: (Symbol, *untyped) -> void
  def set_approved: () -> void
  def open_registrations?: () -> bool
  def external?: () -> bool
  def sanitize_languages: () -> void
  def prepare_new_user!: () -> void
  def prepare_returning_user!: () -> void
  def notify_staff_about_pending_account!: () -> void
  def regenerate_feed!: () -> void
  def needs_feed_update?: () -> bool
  def validate_email_dns?: () -> bool
  def confirmed?: () -> bool
  def valid_invitation?: () -> bool
  def valid_password?: (String) -> bool
  def setting_display_media: () -> String

  def self.recent: () -> User::ActiveRecord_Relation
  def self.pending: () -> User::ActiveRecord_Relation
  def self.approved: () -> User::ActiveRecord_Relation
  def self.confirmed: () -> User::ActiveRecord_Relation
  def self.enabled: () -> User::ActiveRecord_Relation
  def self.disabled: () -> User::ActiveRecord_Relation
  def self.inactive: () -> User::ActiveRecord_Relation
  def self.active: () -> User::ActiveRecord_Relation
  def self.matches_email: (String) -> User::ActiveRecord_Relation
  def self.matches_ip: (IPAddr) -> User::ActiveRecord_Relation
  def self.emailable: () -> User::ActiveRecord_Relation
  def self.devise: (*Symbol) -> void
                 | (Symbol, ?otp_secret_encryption_key: String) -> void
                 | (Symbol, ?otp_number_of_backup_codes: Integer) -> void
  def self.admins: () -> User::ActiveRecord_Relation
  def self.moderators: () -> User::ActiveRecord_Relation
  def self.staff: () -> User::ActiveRecord_Relation
end

User::ACTIVE_DURATION: ActiveSupport::Duration

class User::ActiveRecord_Relation < ActiveRecord::Relation
  include _ActiveRecord_Relation[User]
  include Enumerable[User, self]

  def recent: () -> User::ActiveRecord_Relation
  def pending: () -> User::ActiveRecord_Relation
  def approved: () -> User::ActiveRecord_Relation
  def confirmed: () -> User::ActiveRecord_Relation
  def enabled: () -> User::ActiveRecord_Relation
  def disabled: () -> User::ActiveRecord_Relation
  def inactive: () -> User::ActiveRecord_Relation
  def active: () -> User::ActiveRecord_Relation
  def matches_email: (String) -> User::ActiveRecord_Relation
  def matches_ip: (IPAddr) -> User::ActiveRecord_Relation
  def emailable: () -> User::ActiveRecord_Relation
end

class User::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
end
